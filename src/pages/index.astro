---
import Layout from "../layouts/Layout.astro";
import ColorGrid from "../components/ColorGrid.astro";
import brandData from "../data/brand.json";
---

<Layout
  title={brandData.ui.meta.title}
  description={`${brandData.ui.meta.description} ${brandData.companyName}`}
>
  <!-- Hidden element to store brand data for JavaScript access -->
  <script
    id="brand-data"
    type="application/json"
    is:inline
    set:html={JSON.stringify(brandData)}
  />
  <div class="container">
    <section class="hero">
      <div class="hero-content">
        <h1>{brandData.companyName} <span>{brandData.ui.meta.title}</span></h1>
        <p>{brandData.tagline}</p>
        <div class="hero-cta">
          <a href="#logos" class="btn btn-primary"
            >{brandData.ui.buttons.exploreGuidelines}</a
          >
          <a href="#colors" class="btn btn-secondary"
            >{brandData.ui.buttons.viewColorPalette}</a
          >
        </div>
      </div>
      <!--  <div class="hero-image">
        <img
          src={brandData.logos.primary.svg}
          alt="Logotipo {brandData.companyName}"
          width="300"
          height="90"
        />
      </div> -->
    </section>

    <section id="logos" class="section">
      <h2>{brandData.ui.sections.logos}</h2>
      <div class="content">
        <div class="logo-main">
          <h3>{brandData.ui.sections.primaryLogo}</h3>
          <p>{brandData.logos.primary.description}</p>
          <div class="logo-preview">
            <img
              src={brandData.logos.primary.svg}
              alt="Logotipo Principal"
              width="300"
              height="90"
            />
          </div>
          <div class="download-links">
            <a
              href={brandData.logos.primary.svg}
              class="download-link"
              download
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                ><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
                ></path><polyline points="7 10 12 15 17 10"></polyline><line
                  x1="12"
                  y1="15"
                  x2="12"
                  y2="3"></line></svg
              >
              {brandData.ui.buttons.downloadSvg}
            </a>
            <a
              href={brandData.logos.primary.png}
              class="download-link"
              download
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                ><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
                ></path><polyline points="7 10 12 15 17 10"></polyline><line
                  x1="12"
                  y1="15"
                  x2="12"
                  y2="3"></line></svg
              >
              {brandData.ui.buttons.downloadPng}
            </a>
          </div>
        </div>

        <h3>{brandData.ui.sections.usageGuidelines}</h3>
        <ul class="guidelines-list">
          {
            brandData.logos.guidelines.map((guideline) => (
              <li>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <polyline points="20 6 9 17 4 12" />
                </svg>
                {guideline}
              </li>
            ))
          }
        </ul>

        <h3>{brandData.ui.sections.logoVariations}</h3>
        <div class="logo-variations">
          <div class="logo-card">
            <h4>{brandData.ui.sections.darkVersion}</h4>
            <p>{brandData.logos.dark.description}</p>
            <div class="logo-preview dark-bg">
              <img
                src={brandData.logos.dark.svg}
                alt="Logotipo Escuro"
                width="200"
                height="60"
              />
            </div>
            <div class="download-links">
              <a href={brandData.logos.dark.svg} class="download-link" download>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  ><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
                  ></path><polyline points="7 10 12 15 17 10"></polyline><line
                    x1="12"
                    y1="15"
                    x2="12"
                    y2="3"></line></svg
                >
                {brandData.ui.buttons.downloadSvg}
              </a>
              <a href={brandData.logos.dark.png} class="download-link" download>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  ><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
                  ></path><polyline points="7 10 12 15 17 10"></polyline><line
                    x1="12"
                    y1="15"
                    x2="12"
                    y2="3"></line></svg
                >
                {brandData.ui.buttons.downloadPng}
              </a>
            </div>
          </div>
          <div class="logo-card">
            <h4>{brandData.ui.sections.lightVersion}</h4>
            <p>{brandData.logos.light.description}</p>
            <div class="logo-preview light-bg">
              <img
                src={brandData.logos.light.svg}
                alt="Logotipo Claro"
                width="200"
                height="60"
              />
            </div>
            <div class="download-links">
              <a
                href={brandData.logos.light.svg}
                class="download-link"
                download
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  ><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
                  ></path><polyline points="7 10 12 15 17 10"></polyline><line
                    x1="12"
                    y1="15"
                    x2="12"
                    y2="3"></line></svg
                >
                {brandData.ui.buttons.downloadSvg}
              </a>
              <a
                href={brandData.logos.light.png}
                class="download-link"
                download
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  ><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
                  ></path><polyline points="7 10 12 15 17 10"></polyline><line
                    x1="12"
                    y1="15"
                    x2="12"
                    y2="3"></line></svg
                >
                {brandData.ui.buttons.downloadPng}
              </a>
            </div>
          </div>
          <div class="logo-card">
            <h4>{brandData.ui.sections.iconOnly}</h4>
            <p>{brandData.logos.icon.description}</p>
            <div class="logo-preview">
              <img
                src={brandData.logos.icon.svg}
                alt="Ícone do Logotipo"
                width="60"
                height="60"
              />
            </div>
            <div class="download-links">
              <a href={brandData.logos.icon.svg} class="download-link" download>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  ><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
                  ></path><polyline points="7 10 12 15 17 10"></polyline><line
                    x1="12"
                    y1="15"
                    x2="12"
                    y2="3"></line></svg
                >
                {brandData.ui.buttons.downloadSvg}
              </a>
              <a href={brandData.logos.icon.png} class="download-link" download>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  ><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
                  ></path><polyline points="7 10 12 15 17 10"></polyline><line
                    x1="12"
                    y1="15"
                    x2="12"
                    y2="3"></line></svg
                >
                {brandData.ui.buttons.downloadPng}
              </a>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section id="colors" class="section">
      <h2>{brandData.ui.sections.colors}</h2>
      <div class="content">
        <div class="color-intro">
          <p>{brandData.colors.intro}</p>
        </div>

        {/* Dynamic color grids that adjust based on the number of colors */}
        <ColorGrid
          colors={brandData.colors.primary}
          category="primary"
          title={brandData.ui.sections.primaryColors}
        />

        <ColorGrid
          colors={brandData.colors.accent}
          category="accent"
          title={brandData.ui.sections.accentColors}
        />

        <ColorGrid
          colors={brandData.colors.neutral}
          category="neutral"
          title={brandData.ui.sections.neutralColors}
        />

        <h3>{brandData.ui.sections.colorUsageGuidelines}</h3>
        <div class="color-usage">
          <div class="usage-card">
            <h4>{brandData.ui.sections.primaryColors}</h4>
            <ul class="usage-list">
              {
                brandData.colors.usage.primary.map((usage) => (
                  <li>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="20"
                      height="20"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      class="usage-icon"
                    >
                      <>
                        <circle cx="12" cy="12" r="10" />
                        <line x1="12" y1="8" x2="12" y2="16" />
                        <line x1="8" y1="12" x2="16" y2="12" />
                      </>
                    </svg>
                    {usage}
                  </li>
                ))
              }
            </ul>
          </div>
          <div class="usage-card">
            <h4>{brandData.ui.sections.accentColors}</h4>
            <ul class="usage-list">
              {
                brandData.colors.usage.accent.map((usage) => (
                  <li>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="20"
                      height="20"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      class="usage-icon"
                    >
                      <>
                        <circle cx="12" cy="12" r="10" />
                        <line x1="12" y1="8" x2="12" y2="16" />
                        <line x1="8" y1="12" x2="16" y2="12" />
                      </>
                    </svg>
                    {usage}
                  </li>
                ))
              }
            </ul>
          </div>
          <div class="usage-card">
            <h4>{brandData.ui.sections.neutralColors}</h4>
            <ul class="usage-list">
              {
                brandData.colors.usage.neutral.map((usage) => (
                  <li>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="20"
                      height="20"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      class="usage-icon"
                    >
                      <>
                        <circle cx="12" cy="12" r="10" />
                        <line x1="12" y1="8" x2="12" y2="16" />
                        <line x1="8" y1="12" x2="16" y2="12" />
                      </>
                    </svg>
                    {usage}
                  </li>
                ))
              }
            </ul>
          </div>
        </div>
      </div>
    </section>

    <section id="typography" class="section">
      <h2>{brandData.ui.sections.typography}</h2>
      <div class="content">
        <div class="typography-intro">
          <div class="typography-header">
            <p>{brandData.typography.intro}</p>
          </div>
        </div>

        <div class="font-family-section">
          <div class="font-family-card">
            <div class="font-family-header">
              <h3>{brandData.typography.families.heading.title}</h3>
              <p class="font-description">
                {brandData.typography.families.heading.description}
              </p>
            </div>
            <div class="font-preview">
              <div class="font-sample heading-sample">
                {brandData.typography.families.heading.sample}
              </div>
              <div class="font-weights">
                {
                  brandData.typography.families.heading.weights.map(
                    (weight) => (
                      <span
                        style={`font-weight: ${weight === "Regular" ? "400" : weight === "Medium" ? "500" : weight === "Semibold" ? "600" : "700"};`}
                      >
                        {weight}
                      </span>
                    ),
                  )
                }
              </div>
            </div>
            <div class="download-links">
              <!-- <a href={brandData.typography.downloads.heading.web.url} class="download-link" download={brandData.typography.downloads.heading.web.iconType === 'download' ? true : null}>
								{brandData.typography.downloads.heading.web.iconType === 'download' ? (
									<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line></svg>
								) : (
									<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line><path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"></path></svg>
								)}
								{brandData.ui.buttons.downloadWebFonts}
							</a> -->
              <a
                href={brandData.typography.downloads.heading.desktop.url}
                class="download-link"
                download={brandData.typography.downloads.heading.desktop
                  .iconType === "download"
                  ? true
                  : null}
              >
                {
                  brandData.typography.downloads.heading.desktop.iconType ===
                  "download" ? (
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <>
                        <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" />
                        <polyline points="7 10 12 15 17 10" />
                        <line x1="12" y1="15" x2="12" y2="3" />
                      </>
                    </svg>
                  ) : (
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <>
                        <circle cx="12" cy="12" r="10" />
                        <line x1="2" y1="12" x2="22" y2="12" />
                        <path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z" />
                      </>
                    </svg>
                  )
                }
                {brandData.ui.buttons.downloadDesktopFonts}
              </a>
              <a
                href={brandData.typography.downloads.heading.googleFonts.url}
                class="download-link"
                target="_blank"
                rel="noopener noreferrer"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  ><circle cx="12" cy="12" r="10"></circle><line
                    x1="2"
                    y1="12"
                    x2="22"
                    y2="12"></line><path
                    d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"
                  ></path></svg
                >
                {brandData.ui.buttons.viewGoogleFonts}
              </a>
            </div>
          </div>

          <div class="font-family-card">
            <div class="font-family-header">
              <h3>{brandData.typography.families.body.title}</h3>
              <p class="font-description">
                {brandData.typography.families.body.description}
              </p>
            </div>
            <div class="font-preview">
              <div class="font-sample body-sample">
                {brandData.typography.families.body.sample}
              </div>
              <div class="font-weights">
                {
                  brandData.typography.families.body.weights.map((weight) => (
                    <span
                      style={`font-weight: ${weight === "Regular" ? "400" : weight === "Medium" ? "500" : weight === "Semibold" ? "600" : "700"};`}
                    >
                      {weight}
                    </span>
                  ))
                }
              </div>
            </div>
            <div class="download-links">
              <!-- <a href={brandData.typography.downloads.body.web.url} class="download-link" download={brandData.typography.downloads.body.web.iconType === 'download' ? true : null}>
								{brandData.typography.downloads.body.web.iconType === 'download' ? (
									<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line></svg>
								) : (
									<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line><path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"></path></svg>
								)}
								{brandData.ui.buttons.downloadWebFonts}
							</a> -->
              <a
                href={brandData.typography.downloads.body.desktop.url}
                class="download-link"
                download={brandData.typography.downloads.body.desktop
                  .iconType === "download"
                  ? true
                  : null}
              >
                {
                  brandData.typography.downloads.body.desktop.iconType ===
                  "download" ? (
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <>
                        <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" />
                        <polyline points="7 10 12 15 17 10" />
                        <line x1="12" y1="15" x2="12" y2="3" />
                      </>
                    </svg>
                  ) : (
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <>
                        <circle cx="12" cy="12" r="10" />
                        <line x1="2" y1="12" x2="22" y2="12" />
                        <path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z" />
                      </>
                    </svg>
                  )
                }
                {brandData.ui.buttons.downloadDesktopFonts}
              </a>
              <a
                href={brandData.typography.downloads.body.googleFonts.url}
                class="download-link"
                target="_blank"
                rel="noopener noreferrer"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  ><circle cx="12" cy="12" r="10"></circle><line
                    x1="2"
                    y1="12"
                    x2="22"
                    y2="12"></line><path
                    d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"
                  ></path></svg
                >
                {brandData.ui.buttons.viewGoogleFonts}
              </a>
            </div>
          </div>
        </div>

        <!-- Keep the original sections but hide them with CSS -->
        <div class="type-section">
          <h3>{brandData.ui.sections.headings}</h3>
          <div class="type-grid">
            {
              brandData.typography.headings.map((heading) => (
                <div class="type-card">
                  <div class="type-preview">
                    <div
                      class="type-sample"
                      style={`
											font-size: var(--font-size-${heading.name.toLowerCase()}, ${heading.size});
											font-weight: ${heading.weight === "Regular" ? "400" : heading.weight === "Medium" ? "500" : heading.weight === "Semibold" ? "600" : "700"};
											line-height: var(--line-height-${heading.lineHeight === "1.2" ? "tight" : heading.lineHeight === "1.5" ? "normal" : "relaxed"}, ${heading.lineHeight});
										`}
                    >
                      {heading.example}
                    </div>
                  </div>
                  <div class="type-info">
                    <h4>{heading.name}</h4>
                    <ul class="type-specs">
                      <li>
                        <strong>Font:</strong>{" "}
                        {
                          brandData.typography.families.heading.title.split(
                            " ",
                          )[0]
                        }
                      </li>
                      <li>
                        <strong>Weight:</strong> {heading.weight}
                      </li>
                      <li>
                        <strong>Size:</strong> {heading.size}
                      </li>
                      <li>
                        <strong>Line Height:</strong> {heading.lineHeight}
                      </li>
                    </ul>
                  </div>
                </div>
              ))
            }
          </div>
        </div>

        <div class="type-section">
          <h3>{brandData.ui.sections.bodyText}</h3>
          <div class="type-grid">
            {
              brandData.typography.body.map((text) => (
                <div class="type-card">
                  <div class="type-preview">
                    <p
                      class="type-sample"
                      style={`
											font-size: var(--font-size-${text.size === "1rem" ? "small" : text.size === "0.875rem" ? "xs" : "body"}, ${text.size});
											font-weight: ${text.weight === "Regular" ? "400" : text.weight === "Medium" ? "500" : text.weight === "Semibold" ? "600" : "700"};
											line-height: var(--line-height-${text.lineHeight === "1.5" ? "normal" : "relaxed"}, ${text.lineHeight});
										`}
                    >
                      {text.example}
                    </p>
                  </div>
                  <div class="type-info">
                    <h4>{text.name}</h4>
                    <ul class="type-specs">
                      <li>
                        <strong>Font:</strong>{" "}
                        {brandData.typography.families.body.title.split(" ")[0]}
                      </li>
                      <li>
                        <strong>Weight:</strong> {text.weight}
                      </li>
                      <li>
                        <strong>Size:</strong> {text.size}
                      </li>
                      <li>
                        <strong>Line Height:</strong> {text.lineHeight}
                      </li>
                    </ul>
                  </div>
                </div>
              ))
            }
          </div>
        </div>

        <div class="typography-guidelines">
          <h3>{brandData.ui.sections.typographyGuidelines}</h3>
          <ul class="guidelines-list">
            {
              brandData.typography.guidelines.map((guideline) => (
                <li>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="16"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  >
                    <polyline points="20 6 9 17 4 12" />
                  </svg>
                  {guideline}
                </li>
              ))
            }
          </ul>
        </div>
      </div>
    </section>
  </div>
</Layout>

<style>
  .container {
    max-width: 1200px;
    margin: 0 auto;
  }

  /* Hero Section */
  .hero {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 6rem 4rem;
    background: linear-gradient(135deg, var(--secondary-bg) 0%, #ffffff 100%);
    border-radius: var(--radius-lg);
    margin-bottom: 4rem;
  }

  .hero-content {
    max-width: 600px;
  }

  .hero h1 {
    font-size: var(--font-size-hero);
    letter-spacing: -0.04em;
    font-weight: 700;
    margin: 0;
    color: var(--text);
    line-height: var(--line-height-tight);
  }

  .hero h1 span {
    display: block;
    color: var(--primary);
  }

  .hero p {
    font-size: var(--font-size-body-large);
    color: var(--text-light);
    margin: 1.5rem 0;
    line-height: var(--line-height-relaxed);
  }

  .hero-cta {
    display: flex;
    gap: 1rem;
    margin-top: 2rem;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.75rem 1.5rem;
    border-radius: var(--radius);
    font-weight: 600;
    font-size: var(--font-size-small);
    transition: all 0.2s ease;
    text-decoration: none;
  }

  .btn-primary {
    background-color: var(--primary);
    color: white;
    box-shadow: var(--shadow);
  }

  .btn-primary:hover {
    background-color: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
  }

  .btn-secondary {
    background-color: white;
    color: var(--primary);
    border: 1px solid var(--border);
    box-shadow: var(--shadow-sm);
  }

  .btn-secondary:hover {
    background-color: var(--secondary-bg);
    transform: translateY(-2px);
    box-shadow: var(--shadow);
  }

  /* Section Styles */
  .section {
    margin: 6rem 0;
    padding: 2rem;
    background: var(--secondary-bg);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow);
  }

  .section h2 {
    font-size: var(--font-size-section-title);
    font-weight: 700;
    margin: 0 0 2rem 0;
    color: var(--text);
    position: relative;
    display: inline-block;
  }

  .section h2::after {
    content: "";
    position: absolute;
    bottom: -0.8rem;
    left: 0;
    width: 3rem;
    height: 0.25rem;
    background-color: var(--primary);
    border-radius: 1rem;
  }

  .content {
    background: var(--background);
    padding: 2.5rem;
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    color: var(--text-light);
  }

  h3 {
    font-size: var(--font-size-h3);
    font-weight: 600;
    margin: 2.5rem 0 1.5rem;
    color: var(--text);
  }

  h4 {
    font-size: var(--font-size-h4);
    font-weight: 600;
    margin: 1.5rem 0 1rem;
    color: var(--text);
  }

  /* Logo Section */
  .logo-main {
    margin-bottom: 3rem;
  }

  .logo-preview {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem;
    background-color: var(--secondary-bg);
    border-radius: var(--radius);
    margin: 1.5rem 0;
  }

  .dark-bg {
    background-color: var(--text);
  }

  .light-bg {
    background-color: white;
    border: 1px solid var(--border);
  }

  .logo-card {
    margin-bottom: 2rem;
    background: white;
    border-radius: var(--radius);
    padding: 1.5rem;
    box-shadow: var(--shadow-sm);
    transition:
      transform 0.2s ease,
      box-shadow 0.2s ease;
  }

  .logo-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow);
  }

  .guidelines-list {
    list-style-type: none;
    padding: 0;
    margin: 1.5rem 0;
  }

  .guidelines-list li {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    margin-bottom: 1rem;
    padding: 0.75rem;
    background-color: var(--secondary-bg);
    border-radius: var(--radius-sm);
    transition: background-color 0.2s ease;
    font-size: var(--font-size-small);
  }

  .guidelines-list li:hover {
    background-color: #e5e7eb;
  }

  .guidelines-list svg {
    color: var(--accent-green);
    margin-top: 0.25rem;
  }

  /* Download Links */
  .download-links {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin: 1.5rem 0;
  }

  .download-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.25rem;
    background-color: var(--secondary-bg);
    border-radius: var(--radius);
    text-decoration: none;
    color: var(--text);
    font-weight: 500;
    font-size: var(--font-size-small);
    transition: all 0.2s ease;
    box-shadow: var(--shadow-sm);
  }

  .download-link:hover {
    background-color: #e5e7eb;
    transform: translateY(-2px);
    box-shadow: var(--shadow);
  }

  .download-link svg {
    color: var(--primary);
  }

  /* Color Section */
  .color-intro {
    margin-bottom: 2rem;
  }

  .color-intro p {
    font-size: var(--font-size-body);
    line-height: var(--line-height-relaxed);
    color: var(--text-light);
  }

  /* Color section styles moved to components */

  .usage-card {
    background: white;
    border-radius: var(--radius);
    padding: 1.5rem;
    box-shadow: var(--shadow-sm);
  }

  .usage-list {
    list-style-type: none;
    padding: 0;
    margin: 1rem 0 0;
  }

  .usage-list li {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    margin-bottom: 0.75rem;
    padding-bottom: 0.75rem;
    border-bottom: 1px solid var(--border);
    font-size: var(--font-size-small);
  }

  .usage-list li:last-child {
    border-bottom: none;
    padding-bottom: 0;
  }

  .usage-list svg,
  .usage-icon {
    color: var(--primary);
    margin-top: 0.25rem;
    min-width: 20px;
    min-height: 20px;
    flex-shrink: 0;
  }

  .color-usage {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin: 2rem 0;
  }

  /* Typography Section */
  .typography-intro {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid var(--border);
  }

  .typography-header {
    max-width: 60%;
  }

  .typography-header p {
    font-size: var(--font-size-body);
    line-height: var(--line-height-relaxed);
    color: var(--text-light);
    margin-top: 1rem;
  }

  .font-family-section {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(450px, 1fr));
    gap: 2rem;
    margin-bottom: 3rem;
  }

  .font-family-card {
    background: white;
    border-radius: var(--radius);
    padding: 2rem;
    box-shadow: var(--shadow-sm);
    transition:
      transform 0.2s ease,
      box-shadow 0.2s ease;
    display: flex;
    flex-direction: column;
  }

  .font-family-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow);
  }

  .font-family-header h3 {
    margin-top: 0;
    margin-bottom: 0.5rem;
  }

  .font-name {
    font-size: var(--font-size-h3);
    font-weight: 600;
    color: var(--primary);
    margin: 0.5rem 0;
  }

  .font-description {
    font-size: var(--font-size-body);
    line-height: var(--line-height-relaxed);
    color: var(--text-light);
    margin-bottom: 1.5rem;
  }

  .font-preview {
    padding: 2rem;
    background-color: var(--secondary-bg);
    border-radius: var(--radius);
    margin: 1.5rem 0;
  }

  .font-sample {
    margin: 0 0 1.5rem 0;
    color: var(--text);
    text-align: center;
  }

  .heading-sample {
    font-size: var(--font-size-section-title);
    font-weight: 700;
    line-height: 1.2;
  }

  .body-sample {
    font-size: var(--font-size-body-large);
    font-weight: 400;
    line-height: var(--line-height-normal);
  }

  .font-weights {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 1rem;
    margin-top: 1.5rem;
    padding-top: 1.5rem;
    border-top: 1px solid var(--border);
  }

  .font-weights span {
    font-size: var(--font-size-small);
    color: var(--text);
  }

  .type-section {
    margin-bottom: 3rem;
    display: none; /* Hide the original type sections */
  }

  .type-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin: 2rem 0;
  }

  .type-card {
    background: white;
    border-radius: var(--radius);
    padding: 1.5rem;
    box-shadow: var(--shadow-sm);
    transition:
      transform 0.2s ease,
      box-shadow 0.2s ease;
  }

  .type-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow);
  }

  .type-preview {
    padding: 1.5rem;
    background-color: var(--secondary-bg);
    border-radius: var(--radius);
    margin-bottom: 1.5rem;
  }

  .type-sample {
    margin: 0;
    color: var(--text);
  }

  .type-info h4 {
    margin-top: 0;
  }

  .type-specs {
    list-style-type: none;
    padding: 0;
    margin: 1rem 0 0;
  }

  .type-specs li {
    margin-bottom: 0.5rem;
    color: var(--text-light);
    font-size: var(--font-size-small);
  }

  .type-specs strong {
    color: var(--text);
    margin-right: 0.5rem;
    font-size: var(--font-size-small);
  }

  .typography-guidelines {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid var(--border);
  }

  /* Responsive Styles */
  @media (max-width: 992px) {
    .hero {
      flex-direction: column;
      text-align: center;
      padding: 4rem 1.5rem 3rem;
    }

    .hero-content {
      max-width: 100%;
    }

    .hero-cta {
      justify-content: center;
    }

    .hero-image {
      margin-top: 2rem;
    }

    .typography-intro {
      flex-direction: column;
    }

    .typography-header {
      max-width: 100%;
      margin-bottom: 1.5rem;
    }

    .font-family-section {
      grid-template-columns: 1fr;
    }

    .section {
      margin: 4rem 0;
    }
  }

  @media (max-width: 768px) {
    .section {
      padding: 1.5rem;
      margin: 3rem 0;
    }

    .content {
      padding: 1.5rem;
    }

    .hero h1 {
      font-size: calc(var(--font-size-section-title) + 0.25rem);
    }

    .logo-variations,
    .color-usage,
    .type-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .download-links {
      flex-direction: column;
    }

    .hero {
      padding: 3.5rem 1.25rem 2.5rem;
      margin-bottom: 2.5rem;
    }

    .hero-image img {
      width: 180px;
      height: auto;
    }

    .btn {
      width: auto;
      max-width: 100%;
      padding: 0.75rem 1rem;
    }

    .hero-cta {
      flex-direction: column;
      width: 100%;
    }

    .logo-preview img {
      max-width: 50%;
      height: auto;
    }

    .guidelines-list li {
      padding: 0.75rem 0.5rem;
    }
  }

  /* Small mobile devices */
  @media (max-width: 480px) {
    .section {
      padding: 0;
      margin: 2rem 0;
      background: transparent;
      box-shadow: none;
      border-radius: 0;
    }

    .content {
      padding: 0;
      border-radius: 0;
      box-shadow: none;
    }

    .hero {
      padding: 3rem 1rem 2rem;
      margin-bottom: 2rem;
    }

    .hero h1 {
      font-size: var(--font-size-h3);
    }

    .hero p {
      max-width: 24ch;
      font-size: var(--font-size-small);
      margin: 1rem 0;
    }

    .section h2 {
      margin-top: 0.5rem;
      margin-left: 0rem;
      font-size: calc(var(--font-size-h3) + 0.25rem);
    }

    .section p {
      font-size: var(--font-size-xs) !important;
      line-height: var(--line-height-normal) !important;
    }

    h3 {
      font-size: var(--font-size-h4);
      margin: 1.5rem 0 1rem;
    }

    .logo-preview {
      padding: 1rem;
    }

    .download-link {
      padding: 0.6rem 1rem;
      width: auto;
      max-width: 100%;
      justify-content: center;
    }

    .color-intro p {
      font-size: var(--font-size-small);
    }

    .font-family-card {
      padding: 1.25rem;
    }

    .font-preview {
      padding: 1.25rem;
    }

    .guidelines-list li {
      gap: 0.5rem;
      font-size: var(--font-size-xs);
      padding: 0.75rem;
    }

    .guidelines-list li svg {
      margin-top: 0;
      min-width: 16px !important;
    }
  }

  /* Add JavaScript functionality for copy buttons */
  .copy-btn:active {
    transform: scale(0.95);
  }

  /* Touch feedback for mobile */
  .touch-active {
    transform: scale(0.97);
    opacity: 0.9;
    transition:
      transform 0.1s ease,
      opacity 0.1s ease;
  }
</style>

<script src="/js/colorManager.js" type="module" is:inline></script>

<script is:inline>
  // Add client-side JavaScript for copy to clipboard functionality
  document.addEventListener("DOMContentLoaded", () => {
    // Handle copy to clipboard
    const copyButtons = document.querySelectorAll(".copy-btn");
    copyButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const colorValueElement = button.closest(".color-value");
        if (!colorValueElement) return;

        const colorValue = colorValueElement.getAttribute("data-clipboard");
        if (!colorValue) return;

        navigator.clipboard
          .writeText(colorValue)
          .then(() => {
            // Show success feedback
            const originalHTML = button.innerHTML;
            button.innerHTML =
              '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="20 6 9 17 4 12"></polyline></svg>';

            // Use setAttribute for TypeScript compatibility
            button.setAttribute("style", "color: #10b981"); // Green color

            setTimeout(() => {
              button.innerHTML = originalHTML;
              button.setAttribute("style", ""); // Reset style
            }, 2000);
          })
          .catch((err) => {
            console.error("Failed to copy: ", err);
            // Provide visual feedback even if clipboard fails
            alert("Valor da cor: " + colorValue);
          });
      });
    });

    // Smooth scrolling for anchor links
    const anchorLinks = document.querySelectorAll('a[href^="#"]');
    anchorLinks.forEach((link) => {
      link.addEventListener("click", function (e) {
        e.preventDefault();
        const targetId = this.getAttribute("href");
        if (!targetId) return;

        const targetElement = document.querySelector(targetId);
        if (targetElement) {
          const offsetTop =
            targetElement.getBoundingClientRect().top + window.pageYOffset;
          window.scrollTo({
            top: offsetTop - 80, // Adjust for fixed header
            behavior: "smooth",
          });
        }
      });
    });

    // Add touch feedback for mobile devices
    const allButtons = document.querySelectorAll(
      ".btn, .download-link, .copy-btn",
    );
    allButtons.forEach((button) => {
      button.addEventListener("touchstart", () => {
        button.classList.add("touch-active");
      });

      button.addEventListener("touchend", () => {
        button.classList.remove("touch-active");
      });
    });
  });
</script>
